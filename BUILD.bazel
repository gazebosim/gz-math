load("@buildifier_prebuilt//:rules.bzl", "buildifier", "buildifier_test")
load("@rules_gazebo//gazebo:headers.bzl", "gz_configure_header", "gz_export_header")
load("@rules_license//rules:license.bzl", "license")

package(
    default_applicable_licenses = [":license"],
    default_visibility = ["__subpackages__"],
    features = [
        "layering_check",
        "parse_headers",
    ],
)

license(
    name = "license",
    package_name = "gz-math",
)

licenses(["notice"])

exports_files([
    "LICENSE",
    "MODULE.bazel",
])

gz_export_header(
    name = "Export",
    out = "include/gz/math/Export.hh",
    export_base = "GZ_MATH",
    lib_name = "gz-math",
)

gz_configure_header(
    name = "Config",
    src = "include/gz/math/config.hh.in",
    package_xml = "package.xml",
)

public_headers = glob(
    include = [
        "include/gz/math/*.hh",
        "include/gz/math/detail/*.hh",
        "include/gz/math/graph/*.hh",
    ],
    exclude = [
        "include/gz/math/sdf.hh",
    ],
) + [
    "include/gz/math/Export.hh",
    "include/gz/math/config.hh",
]

private_headers = glob(
    include = [
        "src/*.hh",
    ],
)

sources = glob(
    include = [
        "src/*.cc",
        "src/bazel/*.cc",
    ],
    exclude = [
        "src/*_TEST.cc",
    ],
)

cc_library(
    name = "gz-math",
    srcs = sources,
    hdrs = public_headers + private_headers,
    includes = [
        "include",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@gz-utils//:ImplPtr",
        "@gz-utils//:NeverDestroyed",
    ],
)

test_sources = glob(
    include = [
        "src/*_TEST.cc",
    ],
)

[
    cc_test(
        name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
        srcs = [src],
        deps = [
            ":math",
            "@googletest//:gtest",
            "@googletest//:gtest_main",
        ],
    )
    for src in test_sources
]

buildifier(
    name = "buildifier.fix",
    exclude_patterns = ["./.git/*"],
    lint_mode = "fix",
    mode = "fix",
)

buildifier_test(
    name = "buildifier.test",
    exclude_patterns = ["./.git/*"],
    lint_mode = "warn",
    mode = "diff",
    no_sandbox = True,
    workspace = "//:MODULE.bazel",
)
